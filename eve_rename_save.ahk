; Generated by AutoGUI 2.2.6a
#NoEnv
#Warn
#SingleInstance Force
SetWorkingDir %A_ScriptDir%
SendMode Input

Gui Add, Button, gGuiClose x8 y251 w80 h23 +Default, &Exit
Gui Add, StatusBar,
Gui Add, ListView, x8 y8 w300 h150 -LV0x10 +NoSortHdr +Disabled, Signature Types|# scanned
Gui Add, Text, x8 y166 w300 h30, NOTE: Other signatures (WH's, Combat, ...) will not be processed. Will beep when mapper string is in CB, if enabled.
Gui Add, GroupBox, x96 y204 w212 h83, Delay Mapper String (s)
Gui Add, Text, x104 y249 w196 h30, Change delay until a copied string is converted to mapper string. Default: 2s
Gui Add, Edit, vdelay gDelayChanged x104 y220 w196 h21 Left -VScroll +Number Limit3, 2
Gui Add, CheckBox, vbeep gBeepChanged x8 y216 w80 h23, MapperBeep

Gui Show, w316 h318, E-Uni Bookmark Helper
WinSet, Style, -0x30000, A

; Do not edit above this line

SB_SetParts(120)
SB_SetText("Last scanned signature:",1)

LV_Add(,"Data",0)
LV_Add(,"Relic",0)
LV_Add(,"Gas",0)
LV_Add(,"Null Data",0)
LV_Add(,"Null Relic",0)
LV_Add(,"Others(WH's,Combat,...)",0)
LV_ModifyCol(1,"AutoHdr")
LV_ModifyCol(2,"AutoHdr")

delay := 2000
beep := 0
copyproc := 1

OnClipboardChange("cbchange")

Return

GuiEscape:
GuiClose:
	ExitApp

BeepChanged(){
    global beep
    global delay
    Gui, Submit, NoHide
    delay *=1000 ;because of how Gui submit works
}

DelayChanged(){
    global delay
    Gui, Submit, NoHide
    delay *=1000
}

cbchange(type){
    global delay
    global beep
    global copyproc

    if(copyproc){
        copyproc := 0
        mapper := mapper_String(clipboard)
        clipboard := proc_string(clipboard)
        Sleep, delay
        clipboard := mapper
        if(beep){
            SoundBeep
        }
    } else {
        copyproc := 1
    }
}


mapper_string(copied_string){
	formatted_string := proc_string(copied_string,false)
	RegExMatch(formatted_string, "O)([a-zA-Z]{1,2})\s\[[a-zA-Z]{3}\]\s[a-zA-Z]+",ret_formatted_string)
	RegExMatch(copied_string, "O)([a-zA-Z]{3}-\d{3})\s([\w\s]+)",ret_copied_string)

	if(ret_formatted_string.value(1)="R" or ret_formatted_string.value(1)="NR"){
		ret := ret_copied_string.value(1)
		ret .= "`tCosmic Signature`tRelic Site`t"
		ret .= ret_copied_string.value(2)
		ret .= "`t100,0`%`t1,00 AU"
		return ret
	}else if(ret_formatted_string.value(1)="D" or ret_formatted_string.value(1)="ND"){
		ret := ret_copied_string.value(1)
		ret .= "`tCosmic Signature`tData Site`t"
		ret .= ret_copied_string.value(2)
		ret .= "`t100,0`%`t1,00 AU"
		return ret
	}else if(ret_formatted_string.value(1)="G"){
		ret := ret_copied_string.value(1)
		ret .= "`tCosmic Signature`tGas Site`t"
		ret .= ret_copied_string.value(2)
		ret .= "`t100,0`%`t1,00 AU"
		return ret
	}else{
		return
	}
}

proc_string(copied_string,increment=true){
	if InStr(copied_string, "Unsecured"){

		RegExMatch(copied_string, "O)([a-zA-Z]{3})-\d{3}\s(?>\w+\s){2}([\w\s]+)", ret)
		if(increment){
			SB_SetText("D [" . ret.value(1) . "] " . ret.value(2),2)
			LV_GetText(lv_current_num,1,2)
			LV_Modify(1,"Col2",lv_current_num+1)
		}
		return "D [" . ret.value(1) . "] " . ret.value(2)

	} else if InStr(copied_string, "Forgotten"){

		RegExMatch(copied_string, "O)([a-zA-Z]{3})-\d{3}\s(?>\w+\s){2}([\w\s]+)", ret)
		if(increment){
			SB_SetText("R [" . ret.value(1) . "] " . ret.value(2),2)
			LV_GetText(lv_current_num,2,2)
			LV_Modify(2,"Col2",lv_current_num+1)
		}
		return "R [" . ret.value(1) . "] " . ret.value(2)

	} else if InStr(copied_string, "Reservoir"){

		RegExMatch(copied_string, "O)([a-zA-Z]{3})-\d{3}\s([\w]+)[\s\w]+", ret)
		if(increment){
			SB_SetText("G [" . ret.value(1) . "] " . ret.value(2),2)
			LV_GetText(lv_current_num,3,2)
			LV_Modify(3,"Col2",lv_current_num+1)
		}
		return "G [" . ret.value(1) . "] " . ret.value(2)

	} else if InStr(copied_string, "Central"){

		RegExMatch(copied_string, "O)([a-zA-Z]{3})-\d{3}\sCentral\s(Serpentis|Blood Raider|Guristas|Angel|Sansha)[\s\w]+", ret)
		if(increment){
			SB_SetText("ND [" . ret.value(1) . "] " . ret.value(2),2)
			LV_GetText(lv_current_num,4,2)
			LV_Modify(4,"Col2",lv_current_num+1)
		}
		return "ND [" . ret.value(1) . "] " . ret.value(2)

	} else if InStr(copied_string, "Ruined"){

		RegExMatch(copied_string, "O)([a-zA-Z]{3})-\d{3}\sRuined\s(Serpentis|Blood Raider|Guristas|Angel|Sansha)[\s\w]+", ret)
		if(increment){
			SB_SetText("NR [" . ret.value(1) . "] " . ret.value(2),2)
			LV_GetText(lv_current_num,5,2)
			LV_Modify(5,"Col2",lv_current_num+1)
		}
		return "NR [" . ret.value(1) . "] " . ret.value(2)

	} else {
	
		RegExMatch(copied_string, "O)([a-zA-Z]{3})-\d{3}([\s\w]+)", ret)
		if(increment){
			SB_SetText("OTHER [" . ret.value(1) . "] " . ret.value(2),2)
			LV_GetText(lv_current_num,6,2)
			LV_Modify(6,"Col2",lv_current_num+1)
		}
		
	}
}
